{
  "openapi": "3.0.1",
  "info": {
    "title": "cloud.dalane.api.projects",
    "description": "An API for Dalane Cloud Project Management Platform.",
    "version": "v1"
  },
  "servers": [
    {
      "url": "http://projects.api.dalane.cloud/v1",
      "description": "live"
    }
  ],
  "security": [
    {
      "openIdConnect": []
    }
  ],
  "components": {
    "securitySchemes": {
      "openIdConnect": {
        "type": "openIdConnect",
        "openIdConnectUrl": "http://localhost:8000/.well-known/openid-configuration"
      }
    },
    "parameters": {
      "pagination_query_param": {
        "name": "page",
        "in": "query",
        "required": false,
        "style": "deepObject",
        "explode": true,
        "schema": {
          "type": "object",
          "properties": {
            "size": {
              "description": "Specify the number of records to return in a page. The default is 100. 0 returns all records.",
              "type": "number",
              "minimum": 0,
              "default": 100
            },
            "number": {
              "type": "number",
              "minimum": 1,
              "default": 1
            }
          }
        }
      },
      "element_id": {
        "name": "element_id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid"
        }
      },
      "assignment_id": {
        "name": "assignment_id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid"
        }
      },
      "PathAssignmentIds": {
        "name": "assignment_ids",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid[]"
        }
      },
      "expected_version": {
        "name": "X-Expected-Version",
        "in": "header",
        "required": false,
        "schema": {
          "type": "integer"
        }
      },
      "include": {
        "name": "include",
        "in": "query",
        "style": "form",
        "explode": true,
        "required": false,
        "schema": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "filter": {
        "name": "filter",
        "in": "query",
        "required": false,
        "style": "deepObject",
        "explode": true,
        "schema": {
          "type": "object",
          "properties": {
            "status": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      "period_start_query": {
        "name": "period_start",
        "in": "query",
        "required": true,
        "schema": {
          "type": "integer"
        }
      },
      "period_end_query": {
        "name": "period_end",
        "in": "query",
        "required": true,
        "schema": {
          "type": "integer"
        }
      },
      "assumption_id": {
        "name": "assumption_id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid"
        }
      },
      "dependency_id": {
        "name": "dependency_id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid"
        }
      },
      "requiredAtLimitQueryParam": {
        "name": "requiredAtLimit",
        "in": "query",
        "required": false,
        "schema": {
          "type": "integer",
          "minimum": 0
        }
      },
      "issue_id": {
        "name": "issue_id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid"
        }
      },
      "organisation_id_param": {
        "name": "organisation_id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid"
        }
      },
      "OrganisationIdPathParam": {
        "name": "organisation_id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid"
        }
      },
      "ProjectIdPathParam": {
        "name": "project_id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid"
        }
      },
      "risk_id": {
        "name": "risk_id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid"
        }
      },
      "period_interval_query": {
        "name": "interval",
        "in": "query",
        "required": true,
        "schema": {
          "type": "integer",
          "minimum": 1
        }
      },
      "WorkpackageIdPathParam": {
        "name": "workpackage_id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid"
        }
      },
      "WorkpackageIdQueryParam": {
        "name": "workpackage_id",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "format": "uuid"
        }
      },
      "invitation_id_param": {
        "name": "invitation_id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "schemas": {
      "ErrorObject": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "number"
                },
                "code": {
                  "type": "string"
                },
                "title": {
                  "type": "string"
                },
                "detail": {
                  "type": "string"
                },
                "source": {
                  "type": "object",
                  "properties": {
                    "pointer": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "pointer"
                  ]
                },
                "stack": {
                  "type": "string"
                }
              },
              "required": [
                "status",
                "code",
                "title",
                "detail"
              ]
            }
          }
        },
        "required": [
          "errors"
        ]
      },
      "MetadataObject": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "minimum": 0
          },
          "page": {
            "type": "object",
            "properties": {
              "number": {
                "type": "integer",
                "minimum": 1
              },
              "size": {
                "type": "integer",
                "minimum": 1
              }
            },
            "required": [
              "number",
              "size"
            ]
          }
        },
        "required": [
          "count",
          "page"
        ]
      },
      "UUID": {
        "type": "string",
        "format": "uuid"
      },
      "BreakdownStructureEntity": {
        "type": "object",
        "properties": {
          "project_id": {
            "$ref": "#/components/schemas/UUID"
          },
          "elements": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BreakdownStructureElementEntity"
            }
          },
          "created_at": {
            "description": "UNIX timestamp of when the entity was created",
            "type": "number"
          },
          "updated_at": {
            "description": "UNIX timestamp of when the entity was updated",
            "type": "number"
          },
          "version": {
            "description": "The version of the entity",
            "type": "number",
            "minimum": 1
          }
        },
        "required": [
          "project_id",
          "elements",
          "created_at",
          "updated_at",
          "version"
        ]
      },
      "BreakdownStructureElementEntity": {
        "type": "object",
        "properties": {
          "element_id": {
            "$ref": "#/components/schemas/UUID"
          },
          "code": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "position": {
            "type": "integer",
            "minimum": 0
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "parent_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "required": [
          "element_id",
          "code",
          "name",
          "position",
          "description",
          "parent_id"
        ]
      },
      "AddBreakdownStructureElementDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "code": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "parent_id": {
            "$ref": "#/components/schemas/UUID"
          },
          "position": {
            "type": "number",
            "minimum": 0
          }
        },
        "required": [
          "code",
          "name"
        ]
      },
      "MoveBreakdownStructureElementDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "parent_id": {
            "$ref": "#/components/schemas/UUID"
          },
          "position": {
            "type": "integer",
            "minimum": 0
          }
        }
      },
      "UpdateBreakdownStructureElementDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "code": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "AddBreakdownStructureElementData": {
        "type": "object",
        "additionalProperties": false,
        "description": "A nested array of breakdown structure elements used when creating a breakdown structure using uploaded data.",
        "properties": {
          "code": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AddBreakdownStructureElementData"
            }
          }
        },
        "required": [
          "code",
          "name"
        ]
      },
      "AddUploadedBreakdownStructureDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "method": {
            "type": "string",
            "enum": [
              "upload"
            ]
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AddBreakdownStructureElementData"
            }
          }
        },
        "required": [
          "method",
          "data"
        ]
      },
      "AddEmptyBreakdownStructureDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "method": {
            "type": "string",
            "enum": [
              "empty"
            ]
          }
        },
        "required": [
          "method"
        ]
      },
      "AddTemplateBreakdownStructureDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "method": {
            "type": "string",
            "enum": [
              "template"
            ]
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "method",
          "name"
        ]
      },
      "AddCopiedBreakdownStructureDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "method": {
            "type": "string",
            "enum": [
              "copy"
            ]
          },
          "project_id": {
            "$ref": "#/components/schemas/UUID"
          }
        },
        "required": [
          "method",
          "project_id"
        ]
      },
      "AddBreakdownStructureDto": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/AddUploadedBreakdownStructureDto"
          },
          {
            "$ref": "#/components/schemas/AddEmptyBreakdownStructureDto"
          },
          {
            "$ref": "#/components/schemas/AddTemplateBreakdownStructureDto"
          },
          {
            "$ref": "#/components/schemas/AddCopiedBreakdownStructureDto"
          }
        ]
      },
      "AssumptionRatingEnum": {
        "type": "string",
        "enum": [
          "Very High",
          "High",
          "Moderate",
          "Low",
          "Very Low",
          "None"
        ]
      },
      "AssumptionImpactEnum": {
        "type": "string",
        "enum": [
          "None",
          "Negligible",
          "Minor",
          "Moderate",
          "Major",
          "Severe"
        ]
      },
      "AssumptionStatusEnum": {
        "type": "string",
        "enum": [
          "Proposed",
          "Open",
          "Closed",
          "Rejected",
          "Deleted"
        ]
      },
      "AssumptionEntity": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "assumption_id": {
            "type": "string",
            "format": "uuid"
          },
          "project_id": {
            "type": "string",
            "format": "uuid"
          },
          "workpackage_id": {
            "type": "string",
            "format": "uuid"
          },
          "rbs_element_id": {
            "type": "string",
            "format": "uuid"
          },
          "assumption_number": {
            "type": "number",
            "minimum": 1
          },
          "name": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/AssumptionStatusEnum"
          },
          "description": {
            "type": "string"
          },
          "reason": {
            "type": "string"
          },
          "closeout_by": {
            "type": "integer",
            "nullable": true
          },
          "closed_at": {
            "type": "integer",
            "nullable": true
          },
          "actions": {
            "type": "string"
          },
          "incorrect_effect": {
            "type": "string"
          },
          "incorrect_schedule_impact": {
            "$ref": "#/components/schemas/AssumptionImpactEnum"
          },
          "incorrect_cost_impact": {
            "$ref": "#/components/schemas/AssumptionImpactEnum"
          },
          "incorrect_safety_impact": {
            "$ref": "#/components/schemas/AssumptionImpactEnum"
          },
          "incorrect_quality_impact": {
            "$ref": "#/components/schemas/AssumptionImpactEnum"
          },
          "incorrect_reputation_impact": {
            "$ref": "#/components/schemas/AssumptionImpactEnum"
          },
          "overall_impact": {
            "$ref": "#/components/schemas/AssumptionImpactEnum"
          },
          "incorrect_score": {
            "type": "integer",
            "minimum": 0,
            "maximum": 25
          },
          "incorrect_rating": {
            "$ref": "#/components/schemas/AssumptionRatingEnum"
          },
          "created_at": {
            "type": "number"
          },
          "updated_at": {
            "type": "number"
          },
          "version": {
            "type": "integer",
            "minimum": 1
          },
          "workpackage": {
            "$ref": "#/components/schemas/WorkpackageEntity"
          },
          "rbs_element": {
            "$ref": "#/components/schemas/BreakdownStructureElementEntity"
          }
        },
        "required": [
          "assumption_id",
          "project_id",
          "assumption_number",
          "name",
          "status",
          "created_at",
          "updated_at",
          "version"
        ]
      },
      "AddAssumptionDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "workpackage_id": {
            "type": "string",
            "format": "uuid"
          },
          "rbs_element_id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "minLength": 2
          },
          "status": {
            "$ref": "#/components/schemas/AssumptionStatusEnum"
          },
          "description": {
            "type": "string"
          },
          "reason": {
            "type": "string"
          },
          "closeout_by": {
            "type": "number"
          },
          "closed_at": {
            "type": "number"
          },
          "actions": {
            "type": "string"
          },
          "incorrect_effect": {
            "type": "string"
          },
          "incorrect_schedule_impact": {
            "$ref": "#/components/schemas/AssumptionImpactEnum"
          },
          "incorrect_cost_impact": {
            "$ref": "#/components/schemas/AssumptionImpactEnum"
          },
          "incorrect_safety_impact": {
            "$ref": "#/components/schemas/AssumptionImpactEnum"
          },
          "incorrect_quality_impact": {
            "$ref": "#/components/schemas/AssumptionImpactEnum"
          },
          "incorrect_reputation_impact": {
            "$ref": "#/components/schemas/AssumptionImpactEnum"
          }
        },
        "required": [
          "name",
          "status"
        ]
      },
      "UpdateAssumptionDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "workpackage_id": {
            "type": "string",
            "nullable": true,
            "format": "uuid"
          },
          "rbs_element_id": {
            "type": "string",
            "nullable": true,
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/AssumptionStatusEnum"
          },
          "description": {
            "type": "string",
            "nullable": true,
            "format": "uuid"
          },
          "reason": {
            "type": "string",
            "nullable": true,
            "format": "uuid"
          },
          "closeout_by": {
            "type": "integer",
            "nullable": true
          },
          "closed_at": {
            "type": "integer",
            "nullable": true
          },
          "actions": {
            "type": "string",
            "nullable": true
          },
          "incorrect_effect": {
            "type": "string",
            "nullable": true
          },
          "incorrect_schedule_impact": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AssumptionImpactEnum"
              },
              {
                "nullable": true
              }
            ]
          },
          "incorrect_cost_impact": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AssumptionImpactEnum"
              },
              {
                "nullable": true
              }
            ]
          },
          "incorrect_safety_impact": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AssumptionImpactEnum"
              },
              {
                "nullable": true
              }
            ]
          },
          "incorrect_quality_impact": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AssumptionImpactEnum"
              },
              {
                "nullable": true
              }
            ]
          },
          "incorrect_reputation_impact": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AssumptionImpactEnum"
              },
              {
                "nullable": true
              }
            ]
          }
        }
      },
      "AssumptionsByStatusEntity": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/AssumptionStatusEnum"
          },
          "count": {
            "type": "integer",
            "minimum": 0
          }
        },
        "required": [
          "status",
          "count"
        ]
      },
      "AssumptionsByRatingEntity": {
        "type": "object",
        "properties": {
          "incorrect_rating": {
            "$ref": "#/components/schemas/AssumptionRatingEnum"
          },
          "count": {
            "type": "integer",
            "minimum": 0
          }
        },
        "required": [
          "incorrect_rating",
          "count"
        ]
      },
      "AssumptionDashboardEntity": {
        "type": "object",
        "properties": {
          "by_status": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssumptionsByStatusEntity"
            }
          },
          "by_rating": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssumptionsByRatingEntity"
            }
          },
          "open": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssumptionEntity"
            }
          }
        },
        "required": [
          "by_status",
          "by_rating",
          "open"
        ]
      },
      "UserDashboardEntity": {
        "type": "object"
      },
      "DependencyStatusEnum": {
        "type": "string",
        "enum": [
          "Proposed",
          "Open",
          "Delivered",
          "Accepted",
          "Rejected",
          "Cancelled",
          "Deleted"
        ]
      },
      "LateDependencyImpactEnum": {
        "type": "string",
        "enum": [
          "None",
          "Negligible",
          "Minor",
          "Moderate",
          "Major",
          "Severe"
        ]
      },
      "LateDependencyLikelihoodEnum": {
        "type": "string",
        "enum": [
          "Never",
          "Rare",
          "Unlikely",
          "Possible",
          "Likely",
          "Almost Certain"
        ]
      },
      "LateDependencyRatingEnum": {
        "type": "string",
        "enum": [
          "Very High",
          "High",
          "Moderate",
          "Low",
          "Very Low",
          "None"
        ]
      },
      "AddDependencyDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "workpackage_id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/DependencyStatusEnum"
          },
          "description": {
            "type": "string"
          },
          "required_at": {
            "type": "number"
          },
          "expected_at": {
            "type": "number"
          },
          "actions": {
            "type": "string"
          },
          "late_cost_impact": {
            "$ref": "#/components/schemas/LateDependencyImpactEnum"
          },
          "late_schedule_impact": {
            "$ref": "#/components/schemas/LateDependencyImpactEnum"
          },
          "late_quality_impact": {
            "$ref": "#/components/schemas/LateDependencyImpactEnum"
          },
          "late_reputation_impact": {
            "$ref": "#/components/schemas/LateDependencyImpactEnum"
          },
          "late_safety_impact": {
            "$ref": "#/components/schemas/LateDependencyImpactEnum"
          }
        },
        "required": [
          "name",
          "status"
        ]
      },
      "UpdateDependencyDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/DependencyStatusEnum"
          },
          "workpackage_id": {
            "type": "string",
            "nullable": true,
            "format": "uuid"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "required_at": {
            "type": "number",
            "nullable": true
          },
          "expected_at": {
            "type": "number",
            "nullable": true
          },
          "actions": {
            "type": "string",
            "nullable": true
          },
          "late_cost_impact": {
            "$ref": "#/components/schemas/LateDependencyImpactEnum"
          },
          "late_schedule_impact": {
            "$ref": "#/components/schemas/LateDependencyImpactEnum"
          },
          "late_quality_impact": {
            "$ref": "#/components/schemas/LateDependencyImpactEnum"
          },
          "late_reputation_impact": {
            "$ref": "#/components/schemas/LateDependencyImpactEnum"
          },
          "late_safety_impact": {
            "$ref": "#/components/schemas/LateDependencyImpactEnum"
          }
        }
      },
      "DependencyEntity": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "dependency_id": {
            "type": "string",
            "format": "uuid"
          },
          "project_id": {
            "type": "string",
            "format": "uuid"
          },
          "workpackage_id": {
            "type": "string",
            "format": "uuid"
          },
          "dependency_number": {
            "type": "number",
            "minimum": 1
          },
          "name": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/DependencyStatusEnum"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "required_at": {
            "type": "number",
            "nullable": true
          },
          "expected_at": {
            "type": "number",
            "nullable": true
          },
          "actions": {
            "type": "string",
            "nullable": true
          },
          "late_cost_impact": {
            "$ref": "#/components/schemas/LateDependencyImpactEnum"
          },
          "late_schedule_impact": {
            "$ref": "#/components/schemas/LateDependencyImpactEnum"
          },
          "late_quality_impact": {
            "$ref": "#/components/schemas/LateDependencyImpactEnum"
          },
          "late_reputation_impact": {
            "$ref": "#/components/schemas/LateDependencyImpactEnum"
          },
          "late_safety_impact": {
            "$ref": "#/components/schemas/LateDependencyImpactEnum"
          },
          "overall_impact": {
            "$ref": "#/components/schemas/LateDependencyImpactEnum"
          },
          "late_delivery_score": {
            "type": "integer",
            "minimum": 0
          },
          "late_delivery_rating": {
            "$ref": "#/components/schemas/LateDependencyRatingEnum"
          },
          "created_at": {
            "type": "number"
          },
          "updated_at": {
            "type": "number"
          },
          "version": {
            "type": "integer",
            "minimum": 1
          },
          "workpackage": {
            "$ref": "#/components/schemas/WorkpackageEntity"
          }
        },
        "required": [
          "dependency_id",
          "project_id",
          "dependency_number",
          "name",
          "status",
          "late_cost_impact",
          "late_schedule_impact",
          "late_quality_impact",
          "late_reputation_impact",
          "late_safety_impact",
          "overall_impact",
          "late_delivery_score",
          "late_delivery_rating",
          "created_at",
          "updated_at",
          "version"
        ]
      },
      "DependenciesByStatusEntity": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/DependencyStatusEnum"
          },
          "count": {
            "type": "integer",
            "minimum": 0
          }
        },
        "required": [
          "status",
          "count"
        ]
      },
      "DependenciesByRatingEntity": {
        "type": "object",
        "properties": {
          "late_delivery_rating": {
            "$ref": "#/components/schemas/LateDependencyRatingEnum"
          },
          "count": {
            "type": "integer",
            "minimum": 0
          }
        },
        "required": [
          "late_delivery_rating",
          "count"
        ]
      },
      "DependencyDashboardEntity": {
        "type": "object",
        "properties": {
          "by_status": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DependenciesByStatusEntity"
            }
          },
          "by_rating": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DependenciesByRatingEntity"
            }
          },
          "open": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DependencyEntity"
            }
          }
        },
        "required": [
          "by_status",
          "by_rating",
          "open"
        ]
      },
      "IssueStatusEnum": {
        "type": "string",
        "enum": [
          "Proposed",
          "Open",
          "Closed",
          "Rejected",
          "Deleted"
        ]
      },
      "IssueRatingEnum": {
        "type": "string",
        "enum": [
          "Very High",
          "High",
          "Moderate",
          "Low",
          "Very Low",
          "None"
        ]
      },
      "IssueImpactEnum": {
        "type": "string",
        "enum": [
          "None",
          "Negligible",
          "Minor",
          "Moderate",
          "Major",
          "Severe"
        ]
      },
      "IssueCauseEnum": {
        "type": "string",
        "enum": [
          "Risk",
          "Assumption",
          "Dependency",
          "Other"
        ]
      },
      "AddIssueDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "workpackage_id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/IssueStatusEnum"
          },
          "description": {
            "type": "string"
          },
          "started_at": {
            "type": "number"
          },
          "expected_at": {
            "type": "number"
          },
          "closed_at": {
            "type": "number"
          },
          "caused_by": {
            "$ref": "#/components/schemas/IssueCauseEnum"
          },
          "assumption_id": {
            "type": "string",
            "format": "uuid"
          },
          "risk_id": {
            "type": "string",
            "format": "uuid"
          },
          "dependency_id": {
            "type": "string",
            "format": "uuid"
          },
          "actions": {
            "type": "string"
          },
          "effect": {
            "type": "string"
          },
          "schedule_impact": {
            "$ref": "#/components/schemas/IssueImpactEnum"
          },
          "cost_impact": {
            "$ref": "#/components/schemas/IssueImpactEnum"
          },
          "safety_impact": {
            "$ref": "#/components/schemas/IssueImpactEnum"
          },
          "quality_impact": {
            "$ref": "#/components/schemas/IssueImpactEnum"
          },
          "reputation_impact": {
            "$ref": "#/components/schemas/IssueImpactEnum"
          }
        },
        "required": [
          "name",
          "status",
          "schedule_impact",
          "cost_impact",
          "safety_impact",
          "quality_impact",
          "reputation_impact"
        ]
      },
      "UpdateIssueDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/IssueStatusEnum"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "started_at": {
            "type": "number",
            "nullable": true
          },
          "expected_at": {
            "type": "number",
            "nullable": true
          },
          "closed_at": {
            "type": "number",
            "nullable": true
          },
          "caused_by": {
            "$ref": "#/components/schemas/IssueCauseEnum"
          },
          "workpackage_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "assumption_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "risk_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "dependency_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "actions": {
            "type": "string",
            "nullable": true
          },
          "effect": {
            "type": "string",
            "nullable": true
          },
          "schedule_impact": {
            "$ref": "#/components/schemas/IssueImpactEnum"
          },
          "cost_impact": {
            "$ref": "#/components/schemas/IssueImpactEnum"
          },
          "safety_impact": {
            "$ref": "#/components/schemas/IssueImpactEnum"
          },
          "quality_impact": {
            "$ref": "#/components/schemas/IssueImpactEnum"
          },
          "reputation_impact": {
            "$ref": "#/components/schemas/IssueImpactEnum"
          }
        }
      },
      "IssueEntity": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "issue_id": {
            "type": "string",
            "format": "uuid"
          },
          "project_id": {
            "type": "string",
            "format": "uuid"
          },
          "workpackage_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "issue_number": {
            "type": "number",
            "minimum": 1
          },
          "name": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/IssueStatusEnum"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "reason": {
            "type": "string",
            "nullable": true
          },
          "started_at": {
            "type": "number",
            "nullable": true
          },
          "expected_at": {
            "type": "number",
            "nullable": true
          },
          "closed_at": {
            "type": "number",
            "nullable": true
          },
          "caused_by": {
            "$ref": "#/components/schemas/IssueCauseEnum"
          },
          "assumption_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "risk_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "dependency_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "other_reason": {
            "type": "string",
            "nullable": true
          },
          "actions": {
            "type": "string",
            "nullable": true
          },
          "effect": {
            "type": "string",
            "nullable": true
          },
          "schedule_impact": {
            "$ref": "#/components/schemas/IssueImpactEnum"
          },
          "cost_impact": {
            "$ref": "#/components/schemas/IssueImpactEnum"
          },
          "safety_impact": {
            "$ref": "#/components/schemas/IssueImpactEnum"
          },
          "quality_impact": {
            "$ref": "#/components/schemas/IssueImpactEnum"
          },
          "reputation_impact": {
            "$ref": "#/components/schemas/IssueImpactEnum"
          },
          "issue_rating": {
            "$ref": "#/components/schemas/IssueRatingEnum"
          },
          "created_at": {
            "type": "number"
          },
          "updated_at": {
            "type": "number"
          },
          "version": {
            "type": "integer",
            "minimum": 1
          },
          "workpackage": {
            "$ref": "#/components/schemas/WorkpackageEntity"
          }
        },
        "required": [
          "issue_id",
          "project_id",
          "workpackage_id",
          "issue_number",
          "name",
          "status",
          "description",
          "reason",
          "started_at",
          "expected_at",
          "closed_at",
          "caused_by",
          "assumption_id",
          "risk_id",
          "dependency_id",
          "other_reason",
          "actions",
          "effect",
          "schedule_impact",
          "cost_impact",
          "safety_impact",
          "quality_impact",
          "reputation_impact",
          "issue_rating",
          "created_at",
          "updated_at",
          "version"
        ]
      },
      "IssueDashboardEntity": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "count_by_status": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "status": {
                  "$ref": "#/components/schemas/IssueStatusEnum"
                },
                "count": {
                  "type": "integer",
                  "minimum": 0
                }
              },
              "required": [
                "status",
                "count"
              ]
            }
          },
          "count_by_rating": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "issue_rating": {
                  "$ref": "#/components/schemas/IssueRatingEnum"
                },
                "count": {
                  "type": "integer",
                  "minimum": 0
                }
              },
              "required": [
                "issue_rating",
                "count"
              ]
            }
          },
          "period_issues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IssueEntity"
            }
          }
        },
        "required": [
          "count_by_status",
          "count_by_rating",
          "period_issues"
        ]
      },
      "OrganisationStatusEnum": {
        "type": "string",
        "enum": [
          "Active",
          "Suspended"
        ]
      },
      "OrganisationEntity": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "organisation_id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/OrganisationStatusEnum"
          },
          "status_description": {
            "type": "string",
            "nullable": true
          },
          "created_at": {
            "type": "number"
          },
          "updated_at": {
            "type": "number"
          },
          "version": {
            "type": "integer",
            "minimum": 1
          }
        },
        "required": [
          "organisation_id",
          "name",
          "status",
          "created_at",
          "updated_at",
          "version"
        ]
      },
      "ProjectStatusEnum": {
        "type": "string",
        "enum": [
          "Proposed",
          "Delivering",
          "Rejected",
          "Completed",
          "Deleted",
          "Cancelled"
        ]
      },
      "ProjectRiskSettings": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "method": {
            "type": "string",
            "enum": [
              "Average",
              "Highest"
            ],
            "description": "Sets how the overall risk score will be calculated from the combined impact scores."
          },
          "ratings": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "extreme": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "ge": {
                    "type": "number",
                    "minimum": 0
                  }
                },
                "required": [
                  "ge"
                ]
              },
              "serious": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "ge": {
                    "type": "number",
                    "minimum": 0
                  }
                },
                "required": [
                  "ge"
                ]
              },
              "medium": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "ge": {
                    "type": "number",
                    "minimum": 0
                  }
                },
                "required": [
                  "ge"
                ]
              },
              "low": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "ge": {
                    "type": "number",
                    "minimum": 0
                  }
                },
                "required": [
                  "ge"
                ]
              }
            },
            "required": [
              "extreme",
              "serious",
              "medium",
              "low"
            ]
          }
        },
        "required": [
          "method",
          "ratings"
        ]
      },
      "ProjectEntity": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "project_id": {
            "type": "string",
            "format": "uuid"
          },
          "organisation_id": {
            "type": "string",
            "format": "uuid"
          },
          "owner_id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/ProjectStatusEnum"
          },
          "friendly_id": {
            "type": "string"
          },
          "settings": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "risk": {
                "$ref": "#/components/schemas/ProjectRiskSettings"
              }
            },
            "required": [
              "risk"
            ]
          },
          "created_at": {
            "type": "number"
          },
          "updated_at": {
            "type": "number"
          },
          "version": {
            "type": "integer",
            "minimum": 1
          }
        },
        "required": [
          "project_id",
          "name",
          "status",
          "settings",
          "created_at",
          "updated_at",
          "version"
        ]
      },
      "AddProjectDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/ProjectStatusEnum"
          },
          "friendly_id": {
            "type": "string"
          },
          "initialise": {
            "type": "boolean",
            "default": false
          },
          "settings": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "risk": {
                "$ref": "#/components/schemas/ProjectRiskSettings"
              }
            }
          },
          "owner_id": {
            "type": "string",
            "format": "uuid"
          }
        },
        "required": [
          "name",
          "status"
        ]
      },
      "ProjectDashboardEntity": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "risks": {
            "$ref": "#/components/schemas/RiskDashboardEntity"
          },
          "assumptions": {
            "$ref": "#/components/schemas/AssumptionDashboardEntity"
          },
          "issues": {
            "$ref": "#/components/schemas/IssueDashboardEntity"
          },
          "dependencies": {
            "$ref": "#/components/schemas/DependencyDashboardEntity"
          }
        },
        "required": [
          "risks",
          "assumptions",
          "issues",
          "dependencies"
        ]
      },
      "RamAssignmentEnum": {
        "type": "string",
        "enum": [
          "Responsible",
          "Accountable",
          "Support",
          "Consultable",
          "Informable"
        ]
      },
      "RamEntity": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "project_id": {
            "type": "string",
            "format": "uuid"
          },
          "assignments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RamAssignmentEntity"
            }
          },
          "created_at": {
            "type": "number"
          },
          "updated_at": {
            "type": "number"
          },
          "version": {
            "type": "number",
            "minimum": 1
          }
        },
        "required": [
          "project_id",
          "assignments",
          "created_at",
          "updated_at",
          "version"
        ]
      },
      "AddRamDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "method": {
            "type": "string",
            "enum": [
              "empty",
              "upload"
            ]
          },
          "data": {
            "type": "object"
          }
        },
        "required": [
          "method"
        ]
      },
      "RamAssignmentEntity": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "assignment_id": {
            "type": "string",
            "format": "uuid"
          },
          "workpackage_id": {
            "type": "string",
            "format": "uuid"
          },
          "obs_element_id": {
            "type": "string",
            "format": "uuid"
          },
          "assignment": {
            "$ref": "#/components/schemas/RamAssignmentEnum"
          }
        },
        "required": [
          "assignment_id",
          "workpackage_id",
          "obs_element_id",
          "assignment"
        ]
      },
      "AddRamAssignmentDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "workpackage_id": {
            "type": "string",
            "format": "uuid",
            "description": "The ID of the WBS deliverable"
          },
          "obs_element_id": {
            "type": "string",
            "format": "uuid",
            "description": "The ID of the OBS role"
          },
          "assignment": {
            "$ref": "#/components/schemas/RamAssignmentEnum"
          }
        },
        "required": [
          "workpackage_id",
          "obs_element_id",
          "assignment"
        ]
      },
      "UpdateRamAssignmentDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "assignment": {
            "$ref": "#/components/schemas/RamAssignmentEnum"
          }
        },
        "required": [
          "assignment"
        ]
      },
      "RiskHeatmapAggregate": {
        "type": "array",
        "items": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "impact": {
              "$ref": "#/components/schemas/RiskImpactEnum"
            },
            "never": {
              "type": "number",
              "minimum": 0
            },
            "rare": {
              "type": "number",
              "minimum": 0
            },
            "unlikely": {
              "type": "number",
              "minimum": 0
            },
            "possible": {
              "type": "number",
              "minimum": 0
            },
            "likely": {
              "type": "number",
              "minimum": 0
            },
            "almost_certain": {
              "type": "number",
              "minimum": 0
            }
          },
          "required": [
            "impact",
            "never",
            "rare",
            "unlikely",
            "possible",
            "likely",
            "almost_certain"
          ]
        }
      },
      "PeriodRiskQueryAggregate": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/RiskEntity"
        }
      },
      "RiskDashboardEntity": {
        "type": "object",
        "properties": {
          "heatmap": {
            "$ref": "#/components/schemas/RiskHeatmapAggregate"
          },
          "period_risks": {
            "$ref": "#/components/schemas/PeriodRiskQueryAggregate"
          },
          "by_status": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "status": {
                  "$ref": "#/components/schemas/RiskStatusEnum"
                },
                "count": {
                  "type": "integer",
                  "minimum": 0
                }
              },
              "required": [
                "status",
                "count"
              ]
            }
          },
          "by_response": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "response_strategy": {
                  "$ref": "#/components/schemas/RiskResponseEnum"
                },
                "count": {
                  "type": "integer",
                  "minimum": 0
                }
              },
              "required": [
                "response_strategy",
                "count"
              ]
            }
          },
          "by_type": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "$ref": "#/components/schemas/RiskTypeEnum"
                },
                "count": {
                  "type": "integer",
                  "minimum": 0
                }
              },
              "required": [
                "type",
                "count"
              ]
            }
          },
          "overdue_risks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RiskEntity"
            }
          },
          "by_rating": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "current_rating": {
                  "$ref": "#/components/schemas/RiskRatingEnum"
                },
                "count": {
                  "type": "integer",
                  "minimum": 0
                }
              },
              "required": [
                "current_rating",
                "count"
              ]
            }
          }
        },
        "required": [
          "heatmap",
          "period_risks",
          "by_status",
          "by_response",
          "by_type",
          "overdue_risks",
          "by_rating"
        ]
      },
      "RiskTypeEnum": {
        "type": "string",
        "enum": [
          "Threat",
          "Opportunity"
        ]
      },
      "RiskStatusEnum": {
        "type": "string",
        "enum": [
          "Proposed",
          "Open",
          "Managed",
          "Expired",
          "Rejected",
          "Impacted",
          "Deleted"
        ]
      },
      "RiskRatingEnum": {
        "type": "string",
        "enum": [
          "Very High",
          "High",
          "Moderate",
          "Low",
          "Very Low",
          "None"
        ]
      },
      "RiskLikelihoodEnum": {
        "type": "string",
        "enum": [
          "Never",
          "Rare",
          "Unlikely",
          "Possible",
          "Likely",
          "Almost Certain"
        ]
      },
      "RiskImpactEnum": {
        "type": "string",
        "enum": [
          "None",
          "Negligible",
          "Minor",
          "Moderate",
          "Major",
          "Severe"
        ]
      },
      "RiskResponseEnum": {
        "type": "string",
        "enum": [
          "Avoid",
          "Reduce",
          "Transfer",
          "Accept"
        ]
      },
      "RiskEntity": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "risk_id": {
            "type": "string",
            "format": "uuid"
          },
          "project_id": {
            "type": "string",
            "format": "uuid"
          },
          "workpackage_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "risk_number": {
            "type": "number",
            "minimum": 1
          },
          "rbs_element_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/RiskTypeEnum"
          },
          "starting_at": {
            "type": "number",
            "nullable": true
          },
          "started_at": {
            "type": "number",
            "nullable": true
          },
          "ending_at": {
            "type": "number",
            "nullable": true
          },
          "ended_at": {
            "type": "number",
            "nullable": true
          },
          "cause": {
            "type": "string",
            "nullable": true
          },
          "effect": {
            "type": "string",
            "nullable": true
          },
          "contingency": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/RiskStatusEnum"
          },
          "likelihood": {
            "$ref": "#/components/schemas/RiskLikelihoodEnum"
          },
          "schedule_impact": {
            "$ref": "#/components/schemas/RiskImpactEnum"
          },
          "cost_impact": {
            "$ref": "#/components/schemas/RiskImpactEnum"
          },
          "safety_impact": {
            "$ref": "#/components/schemas/RiskImpactEnum"
          },
          "quality_impact": {
            "$ref": "#/components/schemas/RiskImpactEnum"
          },
          "reputation_impact": {
            "$ref": "#/components/schemas/RiskImpactEnum"
          },
          "overall_impact": {
            "$ref": "#/components/schemas/RiskImpactEnum"
          },
          "score": {
            "type": "integer",
            "minimum": 0,
            "maximum": 25
          },
          "rating": {
            "$ref": "#/components/schemas/RiskRatingEnum"
          },
          "response_strategy": {
            "$ref": "#/components/schemas/RiskResponseEnum"
          },
          "response_actions": {
            "type": "string",
            "nullable": true
          },
          "residual_likelihood": {
            "$ref": "#/components/schemas/RiskLikelihoodEnum"
          },
          "residual_schedule_impact": {
            "$ref": "#/components/schemas/RiskImpactEnum"
          },
          "residual_cost_impact": {
            "$ref": "#/components/schemas/RiskImpactEnum"
          },
          "residual_safety_impact": {
            "$ref": "#/components/schemas/RiskImpactEnum"
          },
          "residual_quality_impact": {
            "$ref": "#/components/schemas/RiskImpactEnum"
          },
          "residual_reputation_impact": {
            "$ref": "#/components/schemas/RiskImpactEnum"
          },
          "residual_overall_impact": {
            "$ref": "#/components/schemas/RiskImpactEnum"
          },
          "residual_effect": {
            "type": "string",
            "nullable": true
          },
          "residual_score": {
            "type": "integer",
            "minimum": 0,
            "maximum": 25
          },
          "residual_rating": {
            "$ref": "#/components/schemas/RiskRatingEnum"
          },
          "current_likelihood": {
            "$ref": "#/components/schemas/RiskLikelihoodEnum"
          },
          "current_schedule_impact": {
            "$ref": "#/components/schemas/RiskImpactEnum"
          },
          "current_cost_impact": {
            "$ref": "#/components/schemas/RiskImpactEnum"
          },
          "current_safety_impact": {
            "$ref": "#/components/schemas/RiskImpactEnum"
          },
          "current_quality_impact": {
            "$ref": "#/components/schemas/RiskImpactEnum"
          },
          "current_reputation_impact": {
            "$ref": "#/components/schemas/RiskImpactEnum"
          },
          "current_overall_impact": {
            "$ref": "#/components/schemas/RiskImpactEnum"
          },
          "current_score": {
            "type": "integer",
            "minimum": 1,
            "maximum": 25
          },
          "current_rating": {
            "$ref": "#/components/schemas/RiskRatingEnum"
          },
          "created_at": {
            "type": "number"
          },
          "updated_at": {
            "type": "number"
          },
          "version": {
            "type": "integer",
            "minimum": 1
          },
          "workpackage": {
            "$ref": "#/components/schemas/WorkpackageEntity"
          },
          "rbs_element": {
            "$ref": "#/components/schemas/BreakdownStructureElementEntity"
          }
        },
        "required": [
          "risk_id",
          "project_id",
          "workpackage_id",
          "risk_number",
          "rbs_element_id",
          "name",
          "description",
          "type",
          "starting_at",
          "started_at",
          "ending_at",
          "ended_at",
          "cause",
          "effect",
          "contingency",
          "status",
          "likelihood",
          "schedule_impact",
          "cost_impact",
          "safety_impact",
          "quality_impact",
          "reputation_impact",
          "score",
          "rating",
          "response_strategy",
          "response_actions",
          "residual_likelihood",
          "residual_schedule_impact",
          "residual_cost_impact",
          "residual_safety_impact",
          "residual_quality_impact",
          "residual_reputation_impact",
          "residual_overall_impact",
          "residual_effect",
          "residual_score",
          "residual_rating",
          "current_likelihood",
          "current_schedule_impact",
          "current_cost_impact",
          "current_safety_impact",
          "current_quality_impact",
          "current_reputation_impact",
          "current_overall_impact",
          "current_score",
          "current_rating",
          "created_at",
          "updated_at",
          "version"
        ]
      },
      "AddRiskDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string",
            "minLength": 2
          },
          "workpackage_id": {
            "type": "string",
            "format": "uuid"
          },
          "rbs_element_id": {
            "type": "string",
            "format": "uuid"
          },
          "description": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/RiskTypeEnum"
          },
          "starting_at": {
            "type": "number"
          },
          "ending_at": {
            "type": "number"
          },
          "impacted_at": {
            "type": "number"
          },
          "cause": {
            "type": "string"
          },
          "effect": {
            "type": "string"
          },
          "contingency": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/RiskStatusEnum"
          },
          "likelihood": {
            "$ref": "#/components/schemas/RiskLikelihoodEnum"
          },
          "schedule_impact": {
            "$ref": "#/components/schemas/RiskImpactEnum"
          },
          "cost_impact": {
            "$ref": "#/components/schemas/RiskImpactEnum"
          },
          "safety_impact": {
            "$ref": "#/components/schemas/RiskImpactEnum"
          },
          "quality_impact": {
            "$ref": "#/components/schemas/RiskImpactEnum"
          },
          "reputation_impact": {
            "$ref": "#/components/schemas/RiskImpactEnum"
          },
          "response_strategy": {
            "$ref": "#/components/schemas/RiskResponseEnum"
          },
          "response_actions": {
            "type": "string"
          },
          "residual_likelihood": {
            "$ref": "#/components/schemas/RiskLikelihoodEnum"
          },
          "residual_schedule_impact": {
            "$ref": "#/components/schemas/RiskImpactEnum"
          },
          "residual_cost_impact": {
            "$ref": "#/components/schemas/RiskImpactEnum"
          },
          "residual_safety_impact": {
            "$ref": "#/components/schemas/RiskImpactEnum"
          },
          "residual_quality_impact": {
            "$ref": "#/components/schemas/RiskImpactEnum"
          },
          "residual_reputation_impact": {
            "$ref": "#/components/schemas/RiskImpactEnum"
          },
          "residual_effect": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "type",
          "status",
          "likelihood",
          "schedule_impact",
          "cost_impact",
          "safety_impact",
          "quality_impact",
          "reputation_impact",
          "response_strategy"
        ]
      },
      "UpdateRiskDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string",
            "minLength": 2
          },
          "workpackage_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "rbs_element_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/RiskTypeEnum"
          },
          "starting_at": {
            "type": "number",
            "nullable": true
          },
          "ending_at": {
            "type": "number",
            "nullable": true
          },
          "cause": {
            "type": "string",
            "nullable": true
          },
          "effect": {
            "type": "string",
            "nullable": true
          },
          "contingency": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/RiskStatusEnum"
          },
          "likelihood": {
            "$ref": "#/components/schemas/RiskLikelihoodEnum"
          },
          "schedule_impact": {
            "$ref": "#/components/schemas/RiskImpactEnum"
          },
          "cost_impact": {
            "$ref": "#/components/schemas/RiskImpactEnum"
          },
          "safety_impact": {
            "$ref": "#/components/schemas/RiskImpactEnum"
          },
          "quality_impact": {
            "$ref": "#/components/schemas/RiskImpactEnum"
          },
          "reputation_impact": {
            "$ref": "#/components/schemas/RiskImpactEnum"
          },
          "response_strategy": {
            "$ref": "#/components/schemas/RiskResponseEnum"
          },
          "response_actions": {
            "type": "string",
            "nullable": true
          },
          "residual_likelihood": {
            "$ref": "#/components/schemas/RiskLikelihoodEnum"
          },
          "residual_schedule_impact": {
            "$ref": "#/components/schemas/RiskImpactEnum"
          },
          "residual_cost_impact": {
            "$ref": "#/components/schemas/RiskImpactEnum"
          },
          "residual_safety_impact": {
            "$ref": "#/components/schemas/RiskImpactEnum"
          },
          "residual_quality_impact": {
            "$ref": "#/components/schemas/RiskImpactEnum"
          },
          "residual_reputation_impact": {
            "$ref": "#/components/schemas/RiskImpactEnum"
          },
          "residual_effect": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "WorkpackageStatusEnum": {
        "type": "string",
        "enum": [
          "Proposed",
          "Approved",
          "Delivering",
          "Completed",
          "Deleted",
          "Rejected"
        ]
      },
      "WorkpackageEntity": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "workpackage_id": {
            "type": "string",
            "format": "uuid"
          },
          "project_id": {
            "type": "string",
            "format": "uuid"
          },
          "wbs_element_id": {
            "type": "string",
            "format": "uuid"
          },
          "friendly_id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/WorkpackageStatusEnum"
          },
          "purpose": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "includes": {
            "type": "string"
          },
          "excludes": {
            "type": "string"
          },
          "commencement_criteria": {
            "type": "string"
          },
          "completion_criteria": {
            "type": "string"
          },
          "references": {
            "type": "string"
          },
          "created_at": {
            "type": "number"
          },
          "updated_at": {
            "type": "number"
          },
          "version": {
            "type": "integer",
            "minimum": 1
          }
        },
        "required": [
          "workpackage_id",
          "project_id",
          "wbs_element_id",
          "friendly_id",
          "title",
          "status",
          "created_at",
          "updated_at",
          "version"
        ]
      },
      "AddWorkpackageDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "wbs_element_id": {
            "type": "string",
            "format": "uuid"
          },
          "friendly_id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/WorkpackageStatusEnum"
          },
          "purpose": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "includes": {
            "type": "string"
          },
          "excludes": {
            "type": "string"
          },
          "commencement_criteria": {
            "type": "string"
          },
          "completion_criteria": {
            "type": "string"
          },
          "references": {
            "type": "string"
          }
        },
        "required": [
          "wbs_element_id",
          "friendly_id",
          "title",
          "status"
        ]
      },
      "UpdateWorkpackageDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "friendly_id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/WorkpackageStatusEnum"
          },
          "wbs_element_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "purpose": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "includes": {
            "type": "string",
            "nullable": true
          },
          "excludes": {
            "type": "string",
            "nullable": true
          },
          "commencement_criteria": {
            "type": "string",
            "nullable": true
          },
          "completion_criteria": {
            "type": "string",
            "nullable": true
          },
          "references": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "TeamMemberRoleEnum": {
        "type": "string",
        "enum": [
          "Admininstrator",
          "Executive",
          "Team Member"
        ]
      },
      "InvitationStatusEnum": {
        "type": "string",
        "enum": [
          "Pending",
          "Sent",
          "Failed",
          "Accepted",
          "Rejected",
          "Cancelled"
        ]
      },
      "InvitationEntity": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "invitation_id": {
            "type": "string",
            "format": "uuid"
          },
          "organisation_id": {
            "type": "string",
            "format": "uuid"
          },
          "organisation_name": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "role": {
            "$ref": "#/components/schemas/TeamMemberRoleEnum"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/InvitationStatusEnum"
          },
          "status_description": {
            "type": "string",
            "nullable": true
          },
          "user_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "created_at": {
            "type": "integer"
          },
          "updated_at": {
            "type": "integer"
          },
          "version": {
            "type": "integer",
            "minimum": 1
          }
        },
        "required": [
          "invitation_id",
          "organisation_id",
          "organisation_name",
          "email",
          "role",
          "message",
          "status",
          "status_description",
          "user_id",
          "created_at",
          "updated_at",
          "version"
        ]
      },
      "AddInvitationDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "invitation_id": {
            "type": "string",
            "format": "uuid"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "role": {
            "$ref": "#/components/schemas/TeamMemberRoleEnum"
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "email",
          "role",
          "message"
        ]
      },
      "AcceptInvitationDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "user_id": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "RejectInvitationDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {}
      }
    },
    "responses": {
      "validation_error_response": {
        "description": "Validation Error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorObject"
            }
          }
        }
      }
    }
  },
  "paths": {
    "/organisations/{organisation_id}/projects/{project_id}/assumptions": {
      "get": {
        "operationId": "listProjectAssumptions",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AssumptionEntity"
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/OrganisationIdPathParam"
        },
        {
          "$ref": "#/components/parameters/ProjectIdPathParam"
        },
        {
          "$ref": "#/components/parameters/WorkpackageIdQueryParam"
        },
        {
          "$ref": "#/components/parameters/include"
        },
        {
          "$ref": "#/components/parameters/filter"
        }
      ]
    },
    "/organisations/{organisation_id}/projects/{project_id}/assumptions/dashboard": {
      "get": {
        "operationId": "getProjectAssumptionDashboard",
        "responses": {
          "200": {
            "description": "Assumptions Dashboard",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssumptionDashboardEntity"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/OrganisationIdPathParam"
        },
        {
          "$ref": "#/components/parameters/ProjectIdPathParam"
        },
        {
          "name": "closeOutByLimit",
          "in": "query",
          "required": false,
          "schema": {
            "type": "integer",
            "minimum": 0
          }
        }
      ]
    },
    "/organisations/{organisation_id}/projects/{project_id}/assumptions/add": {
      "post": {
        "operationId": "addAssumption",
        "responses": {
          "201": {
            "description": "Addd",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssumptionEntity"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddAssumptionDto"
              }
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/OrganisationIdPathParam"
        },
        {
          "$ref": "#/components/parameters/ProjectIdPathParam"
        }
      ]
    },
    "/organisations/{organisation_id}/projects/{project_id}/assumptions/{assumption_id}": {
      "get": {
        "operationId": "getAssumption",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssumptionEntity"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/OrganisationIdPathParam"
        },
        {
          "$ref": "#/components/parameters/ProjectIdPathParam"
        },
        {
          "$ref": "#/components/parameters/assumption_id"
        },
        {
          "$ref": "#/components/parameters/include"
        }
      ]
    },
    "/organisations/{organisation_id}/projects/{project_id}/assumptions/{assumption_id}/update": {
      "post": {
        "operationId": "updateAssumption",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssumptionEntity"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAssumptionDto"
              }
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/OrganisationIdPathParam"
        },
        {
          "$ref": "#/components/parameters/ProjectIdPathParam"
        },
        {
          "$ref": "#/components/parameters/assumption_id"
        },
        {
          "$ref": "#/components/parameters/expected_version"
        }
      ]
    },
    "/organisations/{organisation_id}/projects/{project_id}/dependencies": {
      "get": {
        "operationId": "listProjectDependencies",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DependencyEntity"
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/OrganisationIdPathParam"
        },
        {
          "$ref": "#/components/parameters/ProjectIdPathParam"
        },
        {
          "$ref": "#/components/parameters/WorkpackageIdQueryParam"
        },
        {
          "$ref": "#/components/parameters/include"
        },
        {
          "$ref": "#/components/parameters/filter"
        }
      ]
    },
    "/organisations/{organisation_id}/projects/{project_id}/dependencies/dashboard": {
      "get": {
        "operationId": "getProjectDependencyDashboard",
        "responses": {
          "200": {
            "description": "Dependency Dashboard",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DependencyDashboardEntity"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/OrganisationIdPathParam"
        },
        {
          "$ref": "#/components/parameters/ProjectIdPathParam"
        },
        {
          "$ref": "#/components/parameters/requiredAtLimitQueryParam"
        }
      ]
    },
    "/organisations/{organisation_id}/projects/{project_id}/dependencies/add": {
      "post": {
        "operationId": "addDependency",
        "responses": {
          "201": {
            "description": "Addd",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DependencyEntity"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddDependencyDto"
              }
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/OrganisationIdPathParam"
        },
        {
          "$ref": "#/components/parameters/ProjectIdPathParam"
        }
      ]
    },
    "/organisations/{organisation_id}/projects/{project_id}/dependencies/{dependency_id}": {
      "get": {
        "operationId": "getDependency",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DependencyEntity"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/OrganisationIdPathParam"
        },
        {
          "$ref": "#/components/parameters/ProjectIdPathParam"
        },
        {
          "$ref": "#/components/parameters/dependency_id"
        },
        {
          "$ref": "#/components/parameters/include"
        }
      ]
    },
    "/organisations/{organisation_id}/projects/{project_id}/dependencies/{dependency_id}/update": {
      "post": {
        "operationId": "updateDependency",
        "responses": {
          "200": {
            "description": "Updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DependencyEntity"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDependencyDto"
              }
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/OrganisationIdPathParam"
        },
        {
          "$ref": "#/components/parameters/ProjectIdPathParam"
        },
        {
          "$ref": "#/components/parameters/dependency_id"
        },
        {
          "$ref": "#/components/parameters/expected_version"
        }
      ]
    },
    "/organisations/{organisation_id}/projects/{project_id}/issues": {
      "get": {
        "operationId": "listProjectIssues",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IssueEntity"
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/OrganisationIdPathParam"
        },
        {
          "$ref": "#/components/parameters/ProjectIdPathParam"
        },
        {
          "$ref": "#/components/parameters/WorkpackageIdQueryParam"
        },
        {
          "$ref": "#/components/parameters/include"
        },
        {
          "$ref": "#/components/parameters/filter"
        }
      ]
    },
    "/organisations/{organisation_id}/projects/{project_id}/issues/dashboard": {
      "get": {
        "operationId": "getProjectIssuesDashboard",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IssueDashboardEntity"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/OrganisationIdPathParam"
        },
        {
          "$ref": "#/components/parameters/ProjectIdPathParam"
        },
        {
          "$ref": "#/components/parameters/period_start_query"
        },
        {
          "$ref": "#/components/parameters/period_end_query"
        }
      ]
    },
    "/organisations/{organisation_id}/projects/{project_id}/issues/add": {
      "post": {
        "operationId": "addIssue",
        "responses": {
          "201": {
            "description": "Addd",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IssueEntity"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddIssueDto"
              }
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/OrganisationIdPathParam"
        },
        {
          "$ref": "#/components/parameters/ProjectIdPathParam"
        }
      ]
    },
    "/organisations/{organisation_id}/projects/{project_id}/issue/{issue_id}": {
      "get": {
        "operationId": "getIssue",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IssueEntity"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/OrganisationIdPathParam"
        },
        {
          "$ref": "#/components/parameters/ProjectIdPathParam"
        },
        {
          "$ref": "#/components/parameters/issue_id"
        },
        {
          "$ref": "#/components/parameters/include"
        }
      ]
    },
    "/organisations/{organisation_id}/projects/{project_id}/issues/{issue_id}/update": {
      "post": {
        "operationId": "updateIssue",
        "responses": {
          "200": {
            "description": "Updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IssueEntity"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateIssueDto"
              }
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/OrganisationIdPathParam"
        },
        {
          "$ref": "#/components/parameters/ProjectIdPathParam"
        },
        {
          "$ref": "#/components/parameters/issue_id"
        }
      ]
    },
    "/organisations/{organisation_id}/projects/{project_id}/obs": {
      "get": {
        "operationId": "getObs",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BreakdownStructureEntity"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/OrganisationIdPathParam"
        },
        {
          "$ref": "#/components/parameters/ProjectIdPathParam"
        }
      ]
    },
    "/organisations/{organisation_id}/projects/{project_id}/obs/add": {
      "description": "Add an OBS using a template or an uploaded file.",
      "post": {
        "operationId": "addObs",
        "responses": {
          "201": {
            "description": "Addd",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BreakdownStructureEntity"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddBreakdownStructureDto"
              }
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/OrganisationIdPathParam"
        },
        {
          "$ref": "#/components/parameters/ProjectIdPathParam"
        }
      ]
    },
    "/organisations/{organisation_id}/projects/{project_id}/obs/elements/add": {
      "post": {
        "operationId": "addObsElement",
        "responses": {
          "201": {
            "description": "Addd",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BreakdownStructureEntity"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddBreakdownStructureElementDto"
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/expected_version"
          }
        ]
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/OrganisationIdPathParam"
        },
        {
          "$ref": "#/components/parameters/ProjectIdPathParam"
        }
      ]
    },
    "/organisations/{organisation_id}/projects/{project_id}/obs/elements/{element_id}": {
      "description": "Displays details of the project obs role",
      "get": {
        "operationId": "getObsElement",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BreakdownStructureEntity"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/OrganisationIdPathParam"
        },
        {
          "$ref": "#/components/parameters/ProjectIdPathParam"
        },
        {
          "$ref": "#/components/parameters/element_id"
        }
      ]
    },
    "/organisations/{organisation_id}/projects/{project_id}/obs/elements/{element_id}/move": {
      "description": "Moves the role in the OBS to another position. E.g. change of manager or order of the roles.",
      "post": {
        "operationId": "moveObsElement",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BreakdownStructureEntity"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MoveBreakdownStructureElementDto"
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/expected_version"
          }
        ]
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/OrganisationIdPathParam"
        },
        {
          "$ref": "#/components/parameters/ProjectIdPathParam"
        },
        {
          "$ref": "#/components/parameters/element_id"
        }
      ]
    },
    "/organisations/{organisation_id}/projects/{project_id}/obs/elements/{element_id}/update": {
      "description": "Updates the project role",
      "post": {
        "operationId": "updateObsElement",
        "responses": {
          "200": {
            "description": "Updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BreakdownStructureEntity"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBreakdownStructureElementDto"
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/expected_version"
          }
        ]
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/OrganisationIdPathParam"
        },
        {
          "$ref": "#/components/parameters/ProjectIdPathParam"
        },
        {
          "$ref": "#/components/parameters/element_id"
        }
      ]
    },
    "/organisations/{organisation_id}/projects/{project_id}/obs/elements/{element_id}/delete": {
      "description": "Deletes the project role from the OBS",
      "post": {
        "operationId": "deleteObsElement",
        "responses": {
          "200": {
            "description": "Deleted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BreakdownStructureEntity"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/expected_version"
          }
        ]
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/OrganisationIdPathParam"
        },
        {
          "$ref": "#/components/parameters/ProjectIdPathParam"
        },
        {
          "$ref": "#/components/parameters/element_id"
        }
      ]
    },
    "/organisations": {
      "get": {
        "operationId": "listOrganisations",
        "responses": {
          "200": {
            "description": "Returns an array containing organisations that the user is a member of.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrganisationEntity"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/organisations/{organisation_id}": {
      "get": {
        "operationId": "getOrganisation",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganisationEntity"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/organisation_id_param"
        }
      ]
    },
    "/organisations/{organisation_id}/projects": {
      "get": {
        "operationId": "listOrganisationProjects",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectEntity"
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/OrganisationIdPathParam"
        }
      ]
    },
    "/organisations/{organisation_id}/projects/add": {
      "post": {
        "operationId": "addProject",
        "responses": {
          "201": {
            "description": "Addd",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectEntity"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddProjectDto"
              }
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/OrganisationIdPathParam"
        }
      ]
    },
    "/organisations/{organisation_id}/projects/{project_id}": {
      "get": {
        "operationId": "getProject",
        "responses": {
          "200": {
            "description": "Addd",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectEntity"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/OrganisationIdPathParam"
        },
        {
          "$ref": "#/components/parameters/ProjectIdPathParam"
        }
      ]
    },
    "/organisations/{organisation_id}/projects/{project_id}/dashboard": {
      "get": {
        "operationId": "getProjectDashboard",
        "responses": {
          "200": {
            "description": "Returns the project's dashboard",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectDashboardEntity"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/OrganisationIdPathParam"
        },
        {
          "$ref": "#/components/parameters/ProjectIdPathParam"
        },
        {
          "name": "closeOutByLimit",
          "in": "query",
          "required": false,
          "schema": {
            "type": "integer",
            "minimum": 0
          }
        },
        {
          "$ref": "#/components/parameters/requiredAtLimitQueryParam"
        },
        {
          "$ref": "#/components/parameters/period_start_query"
        },
        {
          "$ref": "#/components/parameters/period_end_query"
        }
      ]
    },
    "/organisations/{organisation_id}/projects/{project_id}/ram": {
      "description": "Returns all role assignments in the Responsibility Assignment Matrix",
      "get": {
        "operationId": "getRam",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RamEntity"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/OrganisationIdPathParam"
        },
        {
          "$ref": "#/components/parameters/ProjectIdPathParam"
        }
      ]
    },
    "/organisations/{organisation_id}/projects/{project_id}/ram/add": {
      "description": "Add a Project Responsibility Assignment Matrix by manually assigning responsibilities or uploading a file.",
      "post": {
        "operationId": "addRam",
        "responses": {
          "201": {
            "description": "Addd",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RamEntity"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddRamDto"
              }
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/OrganisationIdPathParam"
        },
        {
          "$ref": "#/components/parameters/ProjectIdPathParam"
        }
      ]
    },
    "/organisations/{organisation_id}/projects/{project_id}/ram/assignments/add": {
      "post": {
        "operationId": "addRamAssignment",
        "responses": {
          "201": {
            "description": "Addd",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RamAssignmentEntity"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/AddRamAssignmentDto"
                  },
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/AddRamAssignmentDto"
                    }
                  }
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/expected_version"
          }
        ]
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/OrganisationIdPathParam"
        },
        {
          "$ref": "#/components/parameters/ProjectIdPathParam"
        }
      ]
    },
    "/organisations/{organisation_id}/projects/{project_id}/ram/assignments/{assignment_id}/update": {
      "description": "Updates the role assignment in the Responsibility Assignment Matrix.",
      "post": {
        "operationId": "updateRamAssignment",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RamAssignmentEntity"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRamAssignmentDto"
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/expected_version"
          }
        ]
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/OrganisationIdPathParam"
        },
        {
          "$ref": "#/components/parameters/ProjectIdPathParam"
        },
        {
          "$ref": "#/components/parameters/assignment_id"
        }
      ]
    },
    "/organisations/{organisation_id}/projects/{project_id}/ram/assignments/{assignment_ids}/delete": {
      "description": "Deletes a role assignment from the Responsibility Assignment Matrix",
      "delete": {
        "operationId": "deleteRamAssignments",
        "responses": {
          "204": {
            "description": "Deleted"
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/expected_version"
          }
        ]
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/OrganisationIdPathParam"
        },
        {
          "$ref": "#/components/parameters/ProjectIdPathParam"
        },
        {
          "$ref": "#/components/parameters/PathAssignmentIds"
        }
      ]
    },
    "/organisations/{organisation_id}/projects/{project_id}/rbs": {
      "get": {
        "operationId": "getRbs",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BreakdownStructureEntity"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/OrganisationIdPathParam"
        },
        {
          "$ref": "#/components/parameters/ProjectIdPathParam"
        }
      ]
    },
    "/organisations/{organisation_id}/projects/{project_id}/rbs/add": {
      "description": "Add a Project RBS by adding elements, using another project, a template or an uploaded file.",
      "post": {
        "operationId": "addRbs",
        "responses": {
          "201": {
            "description": "Addd",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BreakdownStructureEntity"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddBreakdownStructureDto"
              }
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/OrganisationIdPathParam"
        },
        {
          "$ref": "#/components/parameters/ProjectIdPathParam"
        }
      ]
    },
    "/organisations/{organisation_id}/projects/{project_id}/rbs/elements/add": {
      "post": {
        "operationId": "addRbsElement",
        "responses": {
          "201": {
            "description": "Addd",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BreakdownStructureEntity"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddBreakdownStructureElementDto"
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/expected_version"
          }
        ]
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/OrganisationIdPathParam"
        },
        {
          "$ref": "#/components/parameters/ProjectIdPathParam"
        }
      ]
    },
    "/organisations/{organisation_id}/projects/{project_id}/rbs/elements/{element_id}": {
      "description": "Displays details of the project deliverable",
      "get": {
        "operationId": "getRbsElement",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BreakdownStructureEntity"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/OrganisationIdPathParam"
        },
        {
          "$ref": "#/components/parameters/ProjectIdPathParam"
        },
        {
          "$ref": "#/components/parameters/element_id"
        }
      ]
    },
    "/organisations/{organisation_id}/projects/{project_id}/rbs/elements/{element_id}/move": {
      "description": "Moves the element in the RBS to another position.",
      "post": {
        "operationId": "moveElement",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BreakdownStructureEntity"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MoveBreakdownStructureElementDto"
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/expected_version"
          }
        ]
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/OrganisationIdPathParam"
        },
        {
          "$ref": "#/components/parameters/ProjectIdPathParam"
        },
        {
          "$ref": "#/components/parameters/element_id"
        }
      ]
    },
    "/organisations/{organisation_id}/projects/{project_id}/rbs/elements/{element_id}/update": {
      "description": "Updates the project RBS element",
      "post": {
        "operationId": "updateRbsElement",
        "responses": {
          "200": {
            "description": "Updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BreakdownStructureEntity"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBreakdownStructureElementDto"
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/expected_version"
          }
        ]
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/OrganisationIdPathParam"
        },
        {
          "$ref": "#/components/parameters/ProjectIdPathParam"
        },
        {
          "$ref": "#/components/parameters/element_id"
        }
      ]
    },
    "/organisations/{organisation_id}/projects/{project_id}/rbs/elements/{element_id}/delete": {
      "description": "Deletes the project deliverable from the RBS",
      "post": {
        "operationId": "deleteRbsElement",
        "responses": {
          "200": {
            "description": "Deleted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BreakdownStructureEntity"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/expected_version"
          }
        ]
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/OrganisationIdPathParam"
        },
        {
          "$ref": "#/components/parameters/ProjectIdPathParam"
        },
        {
          "$ref": "#/components/parameters/element_id"
        }
      ]
    },
    "/organisations/{organisation_id}/risks": {
      "get": {
        "operationId": "listOrganisationRisks",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RiskEntity"
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/OrganisationIdPathParam"
        },
        {
          "$ref": "#/components/parameters/WorkpackageIdQueryParam"
        },
        {
          "$ref": "#/components/parameters/include"
        },
        {
          "$ref": "#/components/parameters/filter"
        }
      ]
    },
    "/organisations/{organisation_id}/risks/dashboard": {
      "get": {
        "operationId": "getOrganisationRiskDashboard",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RiskDashboardEntity"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/OrganisationIdPathParam"
        },
        {
          "$ref": "#/components/parameters/period_start_query"
        },
        {
          "$ref": "#/components/parameters/period_end_query"
        }
      ]
    },
    "/organisations/{organisation_id}/projects/{project_id}/risks": {
      "get": {
        "operationId": "listProjectRisks",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RiskEntity"
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/OrganisationIdPathParam"
        },
        {
          "$ref": "#/components/parameters/ProjectIdPathParam"
        },
        {
          "$ref": "#/components/parameters/WorkpackageIdQueryParam"
        },
        {
          "$ref": "#/components/parameters/include"
        },
        {
          "$ref": "#/components/parameters/filter"
        }
      ]
    },
    "/organisations/{organisation_id}/projects/{project_id}/risks/dashboard": {
      "get": {
        "operationId": "getProjectRiskDashboard",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RiskDashboardEntity"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/OrganisationIdPathParam"
        },
        {
          "$ref": "#/components/parameters/ProjectIdPathParam"
        },
        {
          "$ref": "#/components/parameters/period_start_query"
        },
        {
          "$ref": "#/components/parameters/period_end_query"
        }
      ]
    },
    "/organisations/{organisation_id}/projects/{project_id}/risks/add": {
      "post": {
        "operationId": "addRisk",
        "responses": {
          "201": {
            "description": "Addd",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RiskEntity"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddRiskDto"
              }
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/OrganisationIdPathParam"
        },
        {
          "$ref": "#/components/parameters/ProjectIdPathParam"
        }
      ]
    },
    "/organisations/{organisation_id}/projects/{project_id}/risks/{risk_id}": {
      "get": {
        "operationId": "getRisk",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RiskEntity"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/OrganisationIdPathParam"
        },
        {
          "$ref": "#/components/parameters/ProjectIdPathParam"
        },
        {
          "$ref": "#/components/parameters/risk_id"
        },
        {
          "$ref": "#/components/parameters/include"
        }
      ]
    },
    "/organisations/{organisation_id}/projects/{project_id}/risks/{risk_id}/update": {
      "post": {
        "operationId": "updateRisk",
        "responses": {
          "200": {
            "description": "Updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RiskEntity"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRiskDto"
              }
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/OrganisationIdPathParam"
        },
        {
          "$ref": "#/components/parameters/ProjectIdPathParam"
        },
        {
          "$ref": "#/components/parameters/risk_id"
        },
        {
          "$ref": "#/components/parameters/expected_version"
        }
      ]
    },
    "/organisations/{organisation_id}/projects/{project_id}/wbs": {
      "get": {
        "operationId": "getWbs",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BreakdownStructureEntity"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/OrganisationIdPathParam"
        },
        {
          "$ref": "#/components/parameters/ProjectIdPathParam"
        }
      ]
    },
    "/organisations/{organisation_id}/projects/{project_id}/wbs/add": {
      "description": "Add a Project WBS by adding elements, using another project, a template or an uploaded file.",
      "post": {
        "operationId": "addWbs",
        "responses": {
          "201": {
            "description": "Addd",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BreakdownStructureEntity"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddBreakdownStructureDto"
              }
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/OrganisationIdPathParam"
        },
        {
          "$ref": "#/components/parameters/ProjectIdPathParam"
        }
      ]
    },
    "/organisations/{organisation_id}/projects/{project_id}/wbs/elements/add": {
      "post": {
        "operationId": "addWbsElement",
        "responses": {
          "201": {
            "description": "Addd",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BreakdownStructureEntity"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddBreakdownStructureElementDto"
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/OrganisationIdPathParam"
          },
          {
            "$ref": "#/components/parameters/expected_version"
          }
        ]
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/ProjectIdPathParam"
        }
      ]
    },
    "/organisations/{organisation_id}/projects/{project_id}/wbs/elements/{element_id}": {
      "description": "Displays details of the project deliverable",
      "get": {
        "operationId": "getWbsElement",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BreakdownStructureEntity"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/OrganisationIdPathParam"
        },
        {
          "$ref": "#/components/parameters/ProjectIdPathParam"
        },
        {
          "$ref": "#/components/parameters/element_id"
        }
      ]
    },
    "/organisations/{organisation_id}/projects/{project_id}/wbs/elements/{element_id}/move": {
      "description": "Moves the element in the WBS to another position.",
      "post": {
        "operationId": "moveWbsElement",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BreakdownStructureEntity"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MoveBreakdownStructureElementDto"
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/expected_version"
          }
        ]
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/OrganisationIdPathParam"
        },
        {
          "$ref": "#/components/parameters/ProjectIdPathParam"
        },
        {
          "$ref": "#/components/parameters/element_id"
        }
      ]
    },
    "/organisations/{organisation_id}/projects/{project_id}/wbs/elements/{element_id}/update": {
      "description": "Updates the project WBS element",
      "post": {
        "operationId": "updateWbsElement",
        "responses": {
          "200": {
            "description": "Updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BreakdownStructureEntity"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBreakdownStructureElementDto"
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/expected_version"
          }
        ]
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/OrganisationIdPathParam"
        },
        {
          "$ref": "#/components/parameters/ProjectIdPathParam"
        },
        {
          "$ref": "#/components/parameters/element_id"
        }
      ]
    },
    "/organisations/{organisation_id}/projects/{project_id}/wbs/elements/{element_id}/delete": {
      "description": "Deletes the project deliverable from the WBS",
      "post": {
        "operationId": "deleteWbsElement",
        "responses": {
          "204": {
            "description": "Deleted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BreakdownStructureEntity"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/expected_version"
          }
        ]
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/OrganisationIdPathParam"
        },
        {
          "$ref": "#/components/parameters/ProjectIdPathParam"
        },
        {
          "$ref": "#/components/parameters/element_id"
        }
      ]
    },
    "/organisations/{organisation_id}/projects/{project_id}/work-packages": {
      "description": "Returns a list of a project's work packages.",
      "get": {
        "operationId": "listWorkPackages",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkpackageEntity"
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/OrganisationIdPathParam"
        },
        {
          "$ref": "#/components/parameters/ProjectIdPathParam"
        }
      ]
    },
    "/organisations/{organisation_id}/projects/{project_id}/work-packages/add": {
      "description": "Update work package properties",
      "post": {
        "operationId": "addWorkPackage",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkpackageEntity"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddWorkpackageDto"
              }
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/OrganisationIdPathParam"
        },
        {
          "$ref": "#/components/parameters/ProjectIdPathParam"
        }
      ]
    },
    "/organisations/{organisation_id}/projects/{project_id}/work-packages/{workpackage_id}": {
      "description": "Get work package",
      "get": {
        "operationId": "getWorkPackage",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkpackageEntity"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/OrganisationIdPathParam"
        },
        {
          "$ref": "#/components/parameters/ProjectIdPathParam"
        },
        {
          "$ref": "#/components/parameters/WorkpackageIdPathParam"
        }
      ]
    },
    "/organisations/{organisation_id}/projects/{project_id}/work-packages/{workpackage_id}/update": {
      "description": "Update work package",
      "post": {
        "operationId": "updateWorkPackage",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkpackageEntity"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateWorkpackageDto"
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/expected_version"
          }
        ]
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/OrganisationIdPathParam"
        },
        {
          "$ref": "#/components/parameters/ProjectIdPathParam"
        },
        {
          "$ref": "#/components/parameters/WorkpackageIdPathParam"
        }
      ]
    },
    "/organisations/{organisation_id}/projects/{project_id}/work-packages/{workpackage_id}/delete": {
      "description": "Changes the status of a work package to deleted",
      "delete": {
        "operationId": "deleteWorkPackage",
        "responses": {
          "204": {
            "description": "Deleted"
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/expected_version"
          }
        ]
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/OrganisationIdPathParam"
        },
        {
          "$ref": "#/components/parameters/ProjectIdPathParam"
        },
        {
          "$ref": "#/components/parameters/WorkpackageIdPathParam"
        }
      ]
    },
    "/organisations/{organisation_id}/invitations/add": {
      "post": {
        "operationId": "addInvitation",
        "responses": {
          "201": {
            "description": "Invite somebody to join the organisation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvitationEntity"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddInvitationDto"
              }
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/organisation_id_param"
        }
      ]
    },
    "/invitations/{invitation_id}/accept": {
      "post": {
        "operationId": "acceptInvitation",
        "responses": {
          "200": {
            "description": "Accept an invitation to join an organisation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvitationEntity"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AcceptInvitationDto"
              }
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/invitation_id_param"
        }
      ]
    },
    "/invitations/{invitation_id}/reject": {
      "post": {
        "operationId": "rejectInvitation",
        "responses": {
          "200": {
            "description": "Reject an invitation to join an organisation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvitationEntity"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RejectInvitationDto"
              }
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/invitation_id_param"
        }
      ]
    },
    "/me/dashboard": {
      "get": {
        "operationId": "getMyDashboard",
        "responses": {
          "200": {
            "description": "Returns the User Dashboard",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDashboardEntity"
                }
              }
            }
          }
        }
      }
    },
    "/me/projects": {
      "get": {
        "operationId": "listMyProjects",
        "responses": {
          "200": {
            "description": "Returns the list of projects that the user is an owner or team member of.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectEntity"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/me/organisations": {
      "get": {
        "operationId": "listMyOrganisations",
        "responses": {
          "200": {
            "description": "Returns the list of organisations that the user is an owner or member of.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrganisationEntity"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/me/memberships": {
      "get": {
        "operationId": "listMyMemberships",
        "responses": {
          "200": {
            "description": "Returns the list of user team memberships.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
